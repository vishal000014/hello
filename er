import qrcode
import cv2
import numpy as np

# Generate a QR Code with unique identifier
def generate_qr_code(data, filename="qrcode.png"):
    try:
        # Initialize QR code
        qr = qrcode.QRCode(
            version=1,
            error_correction=qrcode.constants.ERROR_CORRECT_H,
            box_size=10,
            border=4,
        )
        
        # Add data to the QR code
        qr.add_data(data)
        qr.make(fit=True)

        # Create an image of the QR code
        img = qr.make_image(fill='black', back_color='white')
        img.save(filename)
        print(f"QR code generated and saved as {filename}")
    except Exception as e:
        print(f"Error generating QR code: {e}")

# Verification logic using OpenCV
def verify_qr_code(filename="qrcode.png", expected_data=""):
    try:
        # Load the image
        img = cv2.imread(filename)
        if img is None:
            print(f"Error: Could not load the image file {filename}")
            return False
        
        # Initialize OpenCV QRCode detector
        detector = cv2.QRCodeDetector()
        
        # Detect and decode the QR code
        data, vertices, _ = detector.detectAndDecode(img)
        
        # Check if QR code is found
        if vertices is not None:
            print("QR code detected.")
            if data == expected_data:
                print("Verification successful. Data matches expected value.")
                return True
            else:
                print("Verification failed. Data does not match.")
                return False
        else:
            print("No QR code detected.")
            return False
    except Exception as e:
        print(f"Error verifying QR code: {e}")
        return False

# Example usage
if __name__ == "__main__":
    unique_id = "Product-Auth-12345"  # Unique identifier for the QR code
    qr_filename = "product_qr.png"
    
    # Step 1: Generate the QR Code
    generate_qr_code(unique_id, qr_filename)
    
    # Step 2: Verify the QR Code
    verification_result = verify_qr_code(qr_filename, expected_data=unique_id)
    
    if verification_result:
        print("Product authentication successful!")
    else:
        print("Product authentication failed.")
